name: Android Export

on:
  push:
    branches:
      - master

env:
  GODOT_VERSION: 4.3
  GODOT_CHANNEL: stable
  ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
  ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
  ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
  WORKING_DIRECTORY: .

jobs:
  export:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set environment variables from project file
        run: |
          echo "PROJECT_NAME=$(awk -F'"' '/config\/name=/ {print $2}' project.godot | tr -d ' ')" >> $GITHUB_ENV
          echo "VERSION=$(awk -F'"' '/config\/version=/ {print $2}' project.godot)" >> $GITHUB_ENV

      - name: Create keystore file
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > release.keystore

      - name: Set environment variables for Godot export
        if: env.ANDROID_KEYSTORE_BASE64 != '' && env.ANDROID_KEYSTORE_ALIAS != '' && env.ANDROID_KEYSTORE_PASSWORD != ''
        run: |
          echo "GODOT_ANDROID_KEYSTORE_RELEASE_PATH=$WORKING_DIRECTORY/release.keystore" >> $GITHUB_ENV
          echo "GODOT_ANDROID_KEYSTORE_RELEASE_USER=$ANDROID_KEYSTORE_ALIAS" >> $GITHUB_ENV
          echo "GODOT_ANDROID_KEYSTORE_RELEASE_PASSWORD=$ANDROID_KEYSTORE_PASSWORD" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
        
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android build template
        shell: bash
        run: |
          wget -q https://github.com/godotengine/godot-builds/releases/download/${{ env.GODOT_VERSION }}-${{ env.GODOT_CHANNEL }}/Godot_v${{ env.GODOT_VERSION }}-${{ env.GODOT_CHANNEL }}_export_templates.tpz
          unzip Godot_v${{ env.GODOT_VERSION }}-${{ env.GODOT_CHANNEL }}_export_templates.tpz
          mkdir -p ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.${{ env.GODOT_CHANNEL }}
          mv templates/* ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.${{ env.GODOT_CHANNEL }}
          rm -f Godot_v${{ env.GODOT_VERSION }}-${{ env.GODOT_CHANNEL }}_export_templates.tpz 
          mkdir -p ${{ env.WORKING_DIRECTORY }}/android/build
          touch ${{ env.WORKING_DIRECTORY }}/android/build/.gdignore
          echo ${{ env.GODOT_VERSION }}.stable > ${{ env.WORKING_DIRECTORY }}/android/.build_version
          unzip ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable/android_source.zip  -d ${{ env.WORKING_DIRECTORY }}/android/build

      - name: Export game signed
        id: export-signed
        if: env.ANDROID_KEYSTORE_BASE64 != '' && env.ANDROID_KEYSTORE_ALIAS != '' && env.ANDROID_KEYSTORE_PASSWORD != ''
        uses: firebelley/godot-export@v6.0.0
        with:
          godot_executable_download_url: https://github.com/godotengine/godot-builds/releases/download/${{ env.GODOT_VERSION }}-${{ env.GODOT_CHANNEL }}/Godot_v${{ env.GODOT_VERSION }}-${{ env.GODOT_CHANNEL }}_linux.x86_64.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot-builds/releases/download/${{ env.GODOT_VERSION }}-${{ env.GODOT_CHANNEL }}/Godot_v${{ env.GODOT_VERSION }}-${{ env.GODOT_CHANNEL }}_export_templates.tpz
          relative_project_path: ${{ env.WORKING_DIRECTORY }}
          presets_to_export: "android"

      - name: Export game unsigned
        id: export-unsigned
        uses: firebelley/godot-export@v6.0.0
        with:
          godot_executable_download_url: https://github.com/godotengine/godot-builds/releases/download/${{ env.GODOT_VERSION }}-${{ env.GODOT_CHANNEL }}/Godot_v${{ env.GODOT_VERSION }}-${{ env.GODOT_CHANNEL }}_linux.x86_64.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot-builds/releases/download/${{ env.GODOT_VERSION }}-${{ env.GODOT_CHANNEL }}/Godot_v${{ env.GODOT_VERSION }}-${{ env.GODOT_CHANNEL }}_export_templates.tpz
          relative_project_path: ${{ env.WORKING_DIRECTORY }}
          presets_to_export: "android-unsigned"

      - name: Rename signed apk/aab files
        if: env.ANDROID_KEYSTORE_BASE64 != '' && env.ANDROID_KEYSTORE_ALIAS != '' && env.ANDROID_KEYSTORE_PASSWORD != ''
        run: |
          mv ${{ steps.export-signed.outputs.build_directory }}/android/$(ls ${{ steps.export-signed.outputs.build_directory }}/android/) ${{ steps.export-signed.outputs.build_directory }}/android/${{ env.PROJECT_NAME }}-v${{ env.VERSION }}-release.aab
      
      - name: Rename unsigned apk/aab files
        run: |
          mv ${{ steps.export-unsigned.outputs.build_directory }}/android-unsigned/$(ls ${{ steps.export-unsigned.outputs.build_directory }}/android-unsigned/) ${{ steps.export-unsigned.outputs.build_directory }}/android-unsigned/${{ env.PROJECT_NAME }}-v${{ env.VERSION }}-release-unsigned.apk

      - name: Convert aab to apk
        id: convert_aab
        if: env.ANDROID_KEYSTORE_BASE64 != '' && env.ANDROID_KEYSTORE_ALIAS != '' && env.ANDROID_KEYSTORE_PASSWORD != ''
        uses: mukeshsolanki/bundletool-action@v1.0.2
        with:
          aabFile: ${{ steps.export-signed.outputs.build_directory }}/android/${{ env.PROJECT_NAME }}-v${{ env.VERSION }}-release.aab
          base64Keystore: ${{ env.ANDROID_KEYSTORE_BASE64 }}
          keystorePassword: ${{ env.ANDROID_KEYSTORE_PASSWORD }}
          keystoreAlias: ${{ env.ANDROID_KEYSTORE_ALIAS }}
          keyPassword: ${{ env.ANDROID_KEYSTORE_PASSWORD }}
          bundletoolVersion: '1.17.2'

      - name: Create release
        uses: ncipollo/release-action@v1.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          tag: v${{ env.VERSION }}
          artifacts: ${{ steps.export-signed.outputs.build_directory }}/android/*, ${{ steps.export-unsigned.outputs.build_directory }}/android-unsigned/*, ${{ steps.convert_aab.outputs.apkPath }}
